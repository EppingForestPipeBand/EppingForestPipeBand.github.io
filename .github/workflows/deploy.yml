name: deploy
# Deploy the site to GitHub Pages
on:
  push:
    branches: ["main"]
    paths-ignore:
      - 'assets/images/fulls/**'
      - '.github/**'
  workflow_run:
    workflows: ["generate_thumbnails"]
    types:
      - completed
    branches: ["main"]

# We want to ignore changes in the assets/images/fulls directory as they trigger the thumbnails workflow.
# The completion of the thumbnails workflow will then trigger this workflow via the workflow_run event.

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name != 'workflow_run' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check markdown files have corresponding images
        run: |
          # Check if each markdown file has a corresponding full-size image
          for md_file in _images/*.md; do
            base_name=$(basename "$md_file" .md)
            if [ ! -f "assets/images/fulls/$base_name.jpg" ]; then
              echo "Error: Missing image for $md_file"
              echo "Expected: assets/images/fulls/$base_name.jpg"
              echo "Please ensure that all _images/*.md files have corresponding images in assets/images/fulls/"
              exit 1
            fi
          done

          # Check if each markdown file has a corresponding thumbnail image
          for md_file in _images/*.md; do
            base_name=$(basename "$md_file" .md)
            if [ ! -f "assets/images/thumbs/$base_name.jpg" ]; then
              echo "Error: Missing thumbnail for $md_file"
              echo "Expected: assets/images/thumbs/$base_name.jpg"
              echo "Please ensure that all _images/*.md files have corresponding thumbnails in assets/images/thumbs/"
              exit 1
            fi
          done

          # Check if each image has a corresponding markdown file
          for img_file in assets/images/fulls/*.jpg; do
            base_name=$(basename "$img_file" .jpg)
            if [ ! -f "_images/$base_name.md" ]; then
              echo "⚠️ Warning: Missing markdown file for $img_file"
              echo "Expected: _images/$base_name.md"
              echo "If you want the image to be displayed, please ensure that it has a corresponding markdown file in _images/"
              echo "This will not break the build, but the image will not be displayed on the main gallery"
            fi
          done

          echo "✅ All _images markdown files have corresponding full and thumbnail images"

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'

      - name: Install Dependencies
        run: |
          gem install bundler
          bundle install

      - name: Build with Jekyll
        run: bundle exec jekyll build
        env:
          JEKYLL_ENV: production
          PAGES_REPO_NWO: ${{ github.repository }}
          JEKYLL_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
